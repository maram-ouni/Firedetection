#****************************** Code d√©tection par cam√©ra ***************************************** (d√©commenter si vous voulez tester avec la cam√©ra  )
# from ultralytics import YOLO
# import cv2

# # Charger le mod√®le entra√Æn√©
# model = YOLO("C:/Users/lenovo/Desktop/resultat_modeleyolo/best.pt")  # changer le chemin si necessaire 


# # Ouvrir la cam√©ra (0 = cam√©ra par d√©faut)
# cap = cv2.VideoCapture(0)

# if not cap.isOpened():
#     print("‚ùå Impossible d'ouvrir la cam√©ra.")
#     exit()

# while True:
#     ret, frame = cap.read()
#     if not ret:
#         print("‚ùå Impossible de lire la frame.")
#         break

#     # D√©tection avec le mod√®le
#     results = model.predict(source=frame, show=False, conf=0.3)

#     # Affichage avec boxes, labels etc.
#     annotated_frame = results[0].plot()

#     cv2.imshow("D√©tection en direct", annotated_frame)

#     # Appuyer sur 'q' pour quitter
#     if cv2.waitKey(1) & 0xFF == ord("q"):
#         break

# cap.release()
# cv2.destroyAllWindows()


#****************************** Code d√©tection par vid√©o *****************************************
import cv2
from ultralytics import YOLO
import os

# === 1. Charger le mod√®le YOLOv8 ===
model = YOLO("C:/Users/lenovo/Desktop/resultat_modeleyolo/best.pt")  # changer le chemin si necessaire 
# === 2. Charger la vid√©o locale ===
video_path = "C:/Users/lenovo/Desktop/Forest_fires.mp4"   # changer le chemin si necessaire 
cap = cv2.VideoCapture(video_path)

if not cap.isOpened():
    print("‚ùå Erreur : Impossible de lire la vid√©o.")
    exit()

# === 3. Configurer la sauvegarde de la vid√©o avec d√©tection ===
fps = cap.get(cv2.CAP_PROP_FPS)
width  = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
fourcc = cv2.VideoWriter_fourcc(*'mp4v')
out = cv2.VideoWriter("video_detected.mp4", fourcc, fps, (width, height))

print("üöÄ Traitement de la vid√©o... Appuie sur Q pour quitter.")

# === 4. Traitement frame par frame ===
while True:
    ret, frame = cap.read()
    if not ret:
        break

    results = model.predict(source=frame, conf=0.5, save=False, verbose=False)
    annotated_frame = results[0].plot()

    cv2.imshow("YOLOv8 - D√©tection", annotated_frame)
    out.write(annotated_frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# === 5. Lib√©ration des ressources ===
cap.release()
out.release()
cv2.destroyAllWindows()
print("‚úÖ D√©tection termin√©e. R√©sultat sauvegard√© : video_detected.mp4")


